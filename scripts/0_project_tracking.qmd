---
title: "Tundra & Boreal Plant Species Trait Spaces"
format: 
  pdf:
    documentclass: scrartcl
    classoption: 
      - DIV=11
      - numbers=noendperiod
    papersize: letter
    geometry: margin=1in
    fig-width: 7
    fig-height: 5
    fig-pos: 'H'
    tbl-cap-location: top
    header-includes: |
      \usepackage{booktabs}
      \usepackage{longtable}
      \usepackage{array}
      \usepackage{multirow}
      \usepackage{wrapfig}
      \usepackage{float}
      \usepackage{colortbl}
      \usepackage{pdflscape}
      \usepackage{tabu}
      \usepackage{threeparttable}
      \usepackage{threeparttablex}
      \usepackage{makecell}
      \usepackage{xcolor}
      \KOMAoption{captions}{tableheading}
editor: visual
---

# Aim

This document outlines the steps in the analysis of Paper 3: Tundra & Boreal Plant Species Trait Spaces. The project aims to buid trait spaces for boreal and tundra plant species and answer the following questions:

1.  Are boreal species functionally distinct from Arctic species?
2.  Which traits drive most of the variation between categories?
3.  Which traits are more relevant in defining 'borealness' across functional groups?

## File Structure

| Name | Function |
|----|----|
| 0_setup.R | Load all necessary packages and functions |
| 1.1_TRY_filtering.R | Filter TRY records to only include those in the boreal and tundra biomes |

```{r packages}
#| label: packages
#| echo: false
#| include: false
library(here)
source(here("scripts", "0_setup.R"))
source(here("scripts", "1.1_TRY_filtering.R"))
```

# 1.1_TRY_filtering

This script filtered out TRY records which fall outside the boundaries of the boreal forest and tundra biomes.

## Filtering Results

```{r filtering summary}
#| label: filtering-summary
#| echo: false
#| message: false
#| warning: false

cat("Original TRY data points:", nrow(try_raw), "\n") # Original TRY data points: 130 213 
cat("Points in Boreal biome:", nrow(boreal_try_data), "\n") # Points in Boreal biome: 20 594
cat("Points in Tundra biome:", nrow(tundra_try_data), "\n") # Points in Tundra biome: 42 500
cat("Total filtered points:", nrow(try_filtered), "\n") # Total filtered points: 63 094 

```

```{r points in biomes}
#| label: points-in-biomes
#| fig-cap: "Distribution of TRY datapoints across the Boreal and Tundra WWF biomes"
#| fig-width: 7
#| fig-height: 6
#| out-width: "100%"
#| echo: false
#| message: false
#| warning: false

# Get world basemap
world <- ne_countries(scale = "medium", returnclass = "sf")

# Define polar projection
proj_choice<-"+proj=laea +lat_0=90 +lon_0=0 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs "

# Transform all spatial objects to the polar projection
world_polar <- st_transform(world, crs = proj_choice)
boreal_forest_polar <- st_transform(boreal_forest, crs = proj_choice)
tundra_polar <- st_transform(tundra, crs = proj_choice)
try_sf_polar <- st_transform(try_sf, crs = proj_choice)

# Define custom colors for biomes
mycols <- c("forestgreen", "skyblue")

# Combine the boreal and tundra data for the legend
biome_data <- rbind(
  cbind(st_drop_geometry(data.frame(BIOME = 6)), st_geometry(boreal_forest_polar)) |> st_sf(),
  cbind(st_drop_geometry(data.frame(BIOME = 11)), st_geometry(tundra_polar)) |> st_sf())

ggplot() +
  # Add biomes
  geom_sf(data = biome_data, aes(fill = factor(BIOME)), color = NA) +
  # Add country outlines
  geom_sf(data = world_polar, fill = NA, color = "darkgray", size = 0.2) +
  # Add points
  geom_sf(data = try_sf_polar[boreal_indices,], color = "darkgreen", size = 0.8, alpha = 0.7) +
  geom_sf(data = try_sf_polar[tundra_indices,], color = "blue", size = 0.8, alpha = 0.7) +
  # Set extent
  coord_sf(crs = proj_choice, 
           ylim = c(-703086, 7071423), 
           xlim = c(-505347.4, 8526158),
           expand = FALSE,
           clip = "on") +
  theme_bw() +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        legend.position = c(0.2, 0.9),
        plot.title = element_text(face = "bold"),
        panel.grid.major = element_line(color = "gray90", linetype = "dashed"),
        panel.grid.minor = element_blank()) +
  # Add custom colours and legend values
  scale_fill_manual(values = mycols,
                    labels = c("Boreal forest", "Arctic tundra"),
                    name = "Biome") +
  # Add point legend
  guides(fill = guide_legend(title = "Biome"),
         color = guide_legend(title = "Records"))
```

## Species Lists

```{r species lists}
#| label: species-lists
#| echo: false
#| message: false
#| warning: false

cat("Total number of species:", length(unique(all_filtered_species$SpeciesName)), "\n") # 800
cat("Boreal species:", length(boreal_species), "\n") # 518
cat("Tundra species:", length(tundra_species), "\n") # 449
cat("Species found in both biomes:", length(common_species), "\n") # 167
cat("Species unique to Boreal:", length(unique_boreal_species), "\n") # 351
cat("Species unique to Tundra:", length(unique_tundra_species), "\n") # 282
```

### Species List Cleaning: 1. Removing morphospecies

From the original species list, 30 records contained morphospecies. Therefore, the following records were removed from our species list.

```{r morphospecies-list-table}
#| label: morphospecies-list-table
#| tbl-cap: Morphospecies removed from species list
#| echo: false
#| message: false
#| warning: false

removed_species |>
  kable(format = "latex", booktabs = TRUE,
        longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "repeat_header"),
                font_size = 9,
                full_width = FALSE) |>
  column_spec(1, italic = TRUE) |>
  collapse_rows(columns = 2, latex_hline = "major", valign = "middle")

```

### Species List Cleaning: 2. Standardise subspecies & varieties to species level

In total, 22 records in the species list are subspecies or varieties.

```{r subspecies-list-table}
#| label: subspecies-list-table
#| tbl-cap: Subspecies standardised in species list
#| echo: false
#| message: false
#| warning: false

subspecies_varieties |>
  kable(format = "latex", booktabs = TRUE,
        longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "repeat_header"),
                font_size = 9,
                full_width = FALSE) |>
  column_spec(1, italic = TRUE) |>
  collapse_rows(columns = 2, latex_hline = "major", valign = "middle")

```

### Species List Cleaning 3: Cross-reference classification

The classification of records created here was compared to the categorisation of species in another paper. The categories were standardised to: "Boreal specialist", "Arctic specialist" and "BorealArctic" for ease of comparison.

The following 127 species were found to differ in classification between the two:

```{r mismatched-classification}
#| label: mismatched-classification
#| tbl-cap: List of Species Differing in Classification
#| echo: false
#| message: false
#| warning: false

# Get list of species with discrepancies
discrepancies <- comparison_results |>
  filter(FoundInBoth & !ClassificationMatch) |>
  select(SpeciesName, MyClassification = BiomeCategory, PaperClassification)

# Count records for each species in each biome from try_filtered dataset
species_record_counts <- try_filtered |>
  group_by(AccSpeciesName, biome) |>
  summarize(record_count = n(), .groups = "drop") |>
  pivot_wider(names_from = biome, values_from = record_count, values_fill = list(record_count = 0)) |>
  mutate(total_records = boreal + tundra)

# Merge the discrepancies with record counts
discrepancy_table <- discrepancies |>
  left_join(species_record_counts, by = c("SpeciesName" = "AccSpeciesName")) |>
  # reorder columns
  select(SpeciesName, MyClassification, PaperClassification, boreal, tundra, total_records)

# Sort by number of records
discrepancy_table <- discrepancy_table |>
  arrange(desc(total_records))

# Create table
discrepancy_table |>
  kable(format = "latex", booktabs = TRUE,
        longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "repeat_header"),
                font_size = 9,
                full_width = FALSE) |>
  column_spec(1, italic = TRUE) |>
  collapse_rows(columns = 2, latex_hline = "major", valign = "middle")
```

Mapped, the distribution of discrepant species is as follows:

```{r discrepant-points-in-biomes}
#| label: discrepant-points-in-biomes
#| fig-cap: "Distribution of species with differing classifications across biomes"
#| fig-width: 7
#| fig-height: 6
#| out-width: "100%"
#| echo: false
#| message: false
#| warning: false

# Extract the list of discrepant species
disputed_species_list <- discrepancies$SpeciesName

# Filter the TRY data for just these species
disputed_records <- try_filtered |>
  filter(AccSpeciesName %in% disputed_species_list)

# Convert to sf object with the right projection
disputed_sf <- st_as_sf(disputed_records, 
                        coords = c("LON_site", "LAT_site"), 
                        crs = 4326) |>
  st_transform(crs = proj_choice)

# Plot map
ggplot() +
  geom_sf(data = biome_data, aes(fill = factor(BIOME)), color = NA, alpha = 0.3) +
  scale_fill_manual(values = c("forestgreen", "skyblue"),
                    labels = c("Boreal forest", "Arctic tundra"),
                    name = "Biome") +
  geom_sf(data = world_polar, fill = NA, color = "darkgray", size = 0.2) +
  geom_sf(data = disputed_sf, color = "red", size = 1.5, alpha = 0.5) +
  coord_sf(crs = proj_choice, 
           ylim = c(-703086, 7071423), 
           xlim = c(-505347.4, 8526158),
           expand = FALSE,
           clip = "on") +
  theme_bw() +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        legend.position = c(0.2, 0.9),
        plot.title = element_text(face = "bold"),
        panel.grid.major = element_line(color = "gray90", linetype = "dashed"),
        panel.grid.minor = element_blank())
```

# Final Species List

After the removal of morphospecies and standardisation of subspecies and varieties to species level, the following list of species were used:

```{r species-list-table}
#| label: species-list-table
#| tbl-cap: Species List in Each Biome
#| echo: false
#| message: false
#| warning: false

# Create table of species
species_table <- standardised_species_list |>
  # Create a new biome column with three categories for sorting
  mutate(BiomeCategory = case_when(
    SharedAcrossBiomes ~ "Boreal & Tundra",
    Biome == "Boreal" ~ "Boreal only",
    Biome == "Tundra" ~ "Tundra only")) |>
  # Set a specific order for biome categories
  mutate(BiomeOrder = factor(BiomeCategory, 
                           levels = c("Boreal only", "Tundra only", "Boreal & Tundra"))) |> 
  # Sort first by biome order, then alphabetically by species name
  arrange(BiomeOrder, SpeciesName) |>
  # Select and rename final columns
  select(SpeciesName, BiomeCategory) |>
  rename("Species Name" = SpeciesName,
         "Biome" = BiomeCategory)

# Print table
species_table |>
  kable(format = "latex", booktabs = TRUE,
        longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "repeat_header"),
                font_size = 9,
                full_width = FALSE) |>
  column_spec(1, italic = TRUE) |>
  collapse_rows(columns = 2, latex_hline = "major", valign = "middle")
```
