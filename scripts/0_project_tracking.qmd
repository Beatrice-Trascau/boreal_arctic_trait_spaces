---
title: "Tundra & Boreal Plant Species Trait Spaces"
format: 
  pdf:
    documentclass: scrartcl
    classoption: 
      - DIV=11
      - numbers=noendperiod
    papersize: letter
    geometry: margin=1in
    fig-width: 7
    fig-height: 5
    fig-pos: 'H'
    tbl-cap-location: top
    header-includes: |
      \usepackage{booktabs}
      \usepackage{longtable}
      \usepackage{array}
      \usepackage{multirow}
      \usepackage{wrapfig}
      \usepackage{float}
      \usepackage{colortbl}
      \usepackage{pdflscape}
      \usepackage{tabu}
      \usepackage{threeparttable}
      \usepackage{threeparttablex}
      \usepackage{makecell}
      \usepackage{xcolor}
      \KOMAoption{captions}{tableheading}
editor: visual
---

# Aim

This document outlines the steps in the analysis of Paper 3: Tundra & Boreal Plant Species Trait Spaces. The project aims to buid trait spaces for boreal and tundra plant species and answer the following questions:

1.  Are boreal species functionally distinct from Arctic species?
2.  Which traits drive most of the variation between categories?
3.  Which traits are more relevant in defining 'borealness' across functional groups?

## File Structure

| Name                | Function                                                                 |
|---------------------|--------------------------------------------------------------------------|
| 0_setup.R           | Load all necessary packages and functions                                |
| 1.1_TRY_filtering.R | Filter TRY records to only include those in the boreal and tundra biomes |

```{r packages}
#| label: packages
#| echo: false
#| include: false
library(here)
source(here("scripts", "0_setup.R"))
source(here("scripts", "1.1_TRY_filtering.R"))
```

# 1.1_TRY_filtering

This script filtered out TRY records which fall outside the boundaries of the boreal forest and tundra biomes.

## Filtering Results

```{r filtering summary}
#| label: filtering-summary
#| echo: false
#| message: false
#| warning: false

cat("Original TRY data points:", nrow(try_raw), "\n") # Original TRY data points: 130 213 
cat("Points in Boreal biome:", nrow(boreal_try_data), "\n") # Points in Boreal biome: 20 594
cat("Points in Tundra biome:", nrow(tundra_try_data), "\n") # Points in Tundra biome: 42 500
cat("Total filtered points:", nrow(try_filtered), "\n") # Total filtered points: 63 094 

```

```{r points in biomes}
#| label: points-in-biomes
#| fig-cap: "Boreal Forest and Tundra Biomes and Points Distribution"
#| fig-width: 7
#| fig-height: 6
#| out-width: "100%"
#| echo: false
#| message: false
#| warning: false

# Get world basemap
world <- ne_countries(scale = "medium", returnclass = "sf")

# Define polar projection
proj_choice<-"+proj=laea +lat_0=90 +lon_0=0 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs "

# Transform all spatial objects to the polar projection
world_polar <- st_transform(world, crs = proj_choice)
boreal_forest_polar <- st_transform(boreal_forest, crs = proj_choice)
tundra_polar <- st_transform(tundra, crs = proj_choice)
try_sf_polar <- st_transform(try_sf, crs = proj_choice)

# Define custom colors for biomes
mycols <- c("forestgreen", "skyblue")

# Combine the boreal and tundra data for the legend
biome_data <- rbind(
  cbind(st_drop_geometry(data.frame(BIOME = 6)), st_geometry(boreal_forest_polar)) |> st_sf(),
  cbind(st_drop_geometry(data.frame(BIOME = 11)), st_geometry(tundra_polar)) |> st_sf())

ggplot() +
  # Add biomes
  geom_sf(data = biome_data, aes(fill = factor(BIOME)), color = NA) +
  # Add country outlines
  geom_sf(data = world_polar, fill = NA, color = "darkgray", size = 0.2) +
  # Add points
  geom_sf(data = try_sf_polar[boreal_indices,], color = "darkgreen", size = 0.8, alpha = 0.7) +
  geom_sf(data = try_sf_polar[tundra_indices,], color = "blue", size = 0.8, alpha = 0.7) +
  # Set extent
  coord_sf(crs = proj_choice, 
           ylim = c(-703086, 7071423), 
           xlim = c(-505347.4, 8526158),
           expand = FALSE,
           clip = "on") +
  theme_bw() +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        legend.position = c(0.2, 0.9),
        plot.title = element_text(face = "bold"),
        panel.grid.major = element_line(color = "gray90", linetype = "dashed"),
        panel.grid.minor = element_blank()) +
  # Add custom colours and legend values
  scale_fill_manual(values = mycols,
                    labels = c("Boreal forest", "Arctic tundra"),
                    name = "Biome") +
  # Add point legend
  guides(fill = guide_legend(title = "Biome"),
         color = guide_legend(title = "Records"))
```

## Species Lists

```{r species lists}
#| label: species-lists
#| echo: false
#| message: false
#| warning: false

cat("Total number of species:", length(unique(all_filtered_species$SpeciesName)), "\n") # 800
cat("Boreal species:", length(boreal_species), "\n") # 518
cat("Tundra species:", length(tundra_species), "\n") # 449
cat("Species found in both biomes:", length(common_species), "\n") # 167
cat("Species unique to Boreal:", length(unique_boreal_species), "\n") # 351
cat("Species unique to Tundra:", length(unique_tundra_species), "\n") # 282

```

```{r venn diagram of species}
#| label: venn-diagram-share-and-unique-species
#| fig-cap: Unique & Shared Species Between Biomes
#| echo: false
#| message: false
#| warning: false

# Get number of boreal, tundra and common species
boreal_count <- length(unique_boreal_species)
tundra_count <- length(unique_tundra_species)
common_count <- length(common_species)

# Create plot
plot(c(0, 10), c(0, 10), type = "n", xlab = "", ylab = "", axes = FALSE)

# Draw circles
theta <- seq(0, 2*pi, length.out = 100)

# Boreal circle
x1 <- 4 + 2.5 * cos(theta)
y1 <- 5 + 2.5 * sin(theta)
polygon(x1, y1, col = adjustcolor("forestgreen", alpha.f = 0.4), border = "darkgreen")

# Tundra circle
x2 <- 6 + 2.5 * cos(theta)
y2 <- 5 + 2.5 * sin(theta)
polygon(x2, y2, col = adjustcolor("skyblue", alpha.f = 0.4), border = "blue")

# Add counts
text(3, 5, paste("Boreal Only\n", boreal_count), cex = 1.5)
text(7, 5, paste("Tundra Only\n", tundra_count), cex = 1.5)
text(5, 5, paste("Common\n", common_count), cex = 1.5)

# Add total counts
text(5, 8.5, paste("Total Species:", length(unique(all_filtered_species$SpeciesName))), cex = 1.3)
text(3, 8, paste("Total Boreal:", length(boreal_species)), cex = 1.2)
text(7, 8, paste("Total Tundra:", length(tundra_species)), cex = 1.2)

# Add legend
legend("bottomright", legend = c("Boreal Forest", "Tundra"), 
       fill = c(adjustcolor("forestgreen", alpha.f = 0.4), adjustcolor("skyblue", alpha.f = 0.4)))
```

```{r species-list-table}
#| label: species-list-table
#| tbl-cap: Species List in Each Biome
#| echo: false
#| message: false
#| warning: false

# Create table of species
species_table <- all_filtered_species |>
  # Create a new biome column with three categories for sorting
  mutate(BiomeCategory = case_when(
    SharedAcrossBiomes ~ "Boreal & Tundra",
    Biome == "Boreal" ~ "Boreal only",
    Biome == "Tundra" ~ "Tundra only")) |>
  # Set a specific order for biome categories
  mutate(BiomeOrder = factor(BiomeCategory, 
                           levels = c("Boreal only", "Tundra only", "Boreal & Tundra"))) |> 
  # Sort first by biome order, then alphabetically by species name
  arrange(BiomeOrder, SpeciesName) |>
  # Select and rename final columns
  select(SpeciesName, BiomeCategory) |>
  rename("Species Name" = SpeciesName,
         "Biome" = BiomeCategory)

# Print table - modified approach
species_table |>
  kable(format = "latex", booktabs = TRUE,
        longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "repeat_header"),
                font_size = 9,
                full_width = FALSE) |>
  column_spec(1, italic = TRUE) |>
  collapse_rows(columns = 2, latex_hline = "major", valign = "middle")
```
